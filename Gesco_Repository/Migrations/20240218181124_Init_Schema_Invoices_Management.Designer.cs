// <auto-generated />
using System;
using Gesco_Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Gesco_Repository.Migrations
{
    [DbContext(typeof(GescoDbContext))]
    [Migration("20240218181124_Init_Schema_Invoices_Management")]
    partial class Init_Schema_Invoices_Management
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.Pocos.Client", b =>
                {
                    b.Property<int>("IdClient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdClient"));

                    b.Property<string>("AddresseClient")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NomClient")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdClient");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("Entities.Pocos.Depot", b =>
                {
                    b.Property<int>("IdDepot")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDepot"));

                    b.Property<string>("NomDepot")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdDepot");

                    b.ToTable("Depot");
                });

            modelBuilder.Entity("Entities.Pocos.EnteteFacture", b =>
                {
                    b.Property<int>("IdEnteteFacture")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEnteteFacture"));

                    b.Property<DateTime>("DateFacture")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdClient")
                        .HasColumnType("int");

                    b.Property<int>("IdFacture")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdEnteteFacture");

                    b.HasIndex("IdClient");

                    b.HasIndex("IdFacture")
                        .IsUnique();

                    b.ToTable("EnteteFacture");
                });

            modelBuilder.Entity("Entities.Pocos.EnteteFactureFournisseur", b =>
                {
                    b.Property<int>("IdEnteteFactureFournisseur")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEnteteFactureFournisseur"));

                    b.Property<DateTime>("DateFacture")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdFactureFournisseur")
                        .HasColumnType("int");

                    b.Property<int>("IdFournisseur")
                        .HasColumnType("int");

                    b.Property<string>("ReferenceFactureFournisseur")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdEnteteFactureFournisseur");

                    b.HasIndex("IdFactureFournisseur")
                        .IsUnique();

                    b.HasIndex("IdFournisseur");

                    b.ToTable("EnteteFactureFournisseur");
                });

            modelBuilder.Entity("Entities.Pocos.Facture", b =>
                {
                    b.Property<int>("IdFacture")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFacture"));

                    b.Property<string>("ReferenceFacture")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdFacture");

                    b.ToTable("Facture");
                });

            modelBuilder.Entity("Entities.Pocos.FactureFournisseur", b =>
                {
                    b.Property<int>("IdFactureFournisseur")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFactureFournisseur"));

                    b.HasKey("IdFactureFournisseur");

                    b.ToTable("FactureFournisseur");
                });

            modelBuilder.Entity("Entities.Pocos.Fournisseur", b =>
                {
                    b.Property<int>("IdFournisseur")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFournisseur"));

                    b.Property<string>("AddresseFournisseur")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("AddresseFournisseur");

                    b.Property<string>("NomFournisseur")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NomFournisseur");

                    b.HasKey("IdFournisseur");

                    b.ToTable("Fournisseur");
                });

            modelBuilder.Entity("Entities.Pocos.LigneFacture", b =>
                {
                    b.Property<int>("IdLigneFacture")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLigneFacture"));

                    b.Property<int>("IdDepot")
                        .HasColumnType("int");

                    b.Property<int>("IdFacture")
                        .HasColumnType("int");

                    b.Property<int>("IdProduit")
                        .HasColumnType("int");

                    b.Property<int?>("IdStockSortie")
                        .HasColumnType("int");

                    b.Property<decimal>("Prix")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("Quantite")
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("IdLigneFacture");

                    b.HasIndex("IdDepot");

                    b.HasIndex("IdFacture");

                    b.HasIndex("IdStockSortie")
                        .IsUnique()
                        .HasFilter("[IdStockSortie] IS NOT NULL");

                    b.HasIndex("IdProduit", "IdFacture")
                        .IsUnique();

                    b.ToTable("LigneFacture");
                });

            modelBuilder.Entity("Entities.Pocos.LigneFactureFournisseur", b =>
                {
                    b.Property<int>("IdLigneFactureFournisseur")
                        .HasColumnType("int");

                    b.Property<int>("IdProduit")
                        .HasColumnType("int");

                    b.Property<decimal>("Prix")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("Quantite")
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("IdLigneFactureFournisseur");

                    b.HasIndex("IdProduit");

                    b.ToTable("LigneFactureFournisseur");
                });

            modelBuilder.Entity("Entities.Pocos.Production", b =>
                {
                    b.Property<int>("IdProduction")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProduction"));

                    b.Property<DateTime>("DateDebutProduction")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateFinProduction")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdFactureFournisseur")
                        .HasColumnType("int");

                    b.Property<int>("IdProduit")
                        .HasColumnType("int");

                    b.Property<int>("IdStockEntree")
                        .HasColumnType("int");

                    b.HasKey("IdProduction");

                    b.HasIndex("IdFactureFournisseur");

                    b.HasIndex("IdProduit");

                    b.HasIndex("IdStockEntree");

                    b.ToTable("Production");
                });

            modelBuilder.Entity("Entities.Pocos.Produit", b =>
                {
                    b.Property<int>("IdProduit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProduit"));

                    b.Property<string>("NomProduit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("PrixProduit")
                        .HasColumnType("decimal(5,2)");

                    b.Property<int>("SuiviStock")
                        .HasColumnType("int");

                    b.HasKey("IdProduit");

                    b.ToTable("Produit");
                });

            modelBuilder.Entity("Entities.Pocos.ProduitDepot", b =>
                {
                    b.Property<int>("IdProduitDepot")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProduitDepot"));

                    b.Property<DateTime>("DateInventaire")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdDepot")
                        .HasColumnType("int");

                    b.Property<int>("IdProduit")
                        .HasColumnType("int");

                    b.Property<decimal>("StockInitial")
                        .HasColumnType("decimal(5,2)");

                    b.Property<string>("TypeInventaire")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdProduitDepot");

                    b.HasIndex("IdDepot");

                    b.HasIndex("IdProduit", "IdDepot")
                        .IsUnique();

                    b.ToTable("ProduitDepot");
                });

            modelBuilder.Entity("Entities.Pocos.ProduitFournisseur", b =>
                {
                    b.Property<int>("IdProduit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProduit"));

                    b.Property<string>("NomProduit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("PrixProduit")
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("IdProduit");

                    b.ToTable("ProduitFournisseur");
                });

            modelBuilder.Entity("Entities.Pocos.StockEntree", b =>
                {
                    b.Property<int>("IdStockEntree")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdStockEntree"));

                    b.Property<DateTime>("DateMouvement")
                        .HasColumnType("datetime2");

                    b.Property<string>("Sens")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdStockEntree");

                    b.ToTable("StockEntree");
                });

            modelBuilder.Entity("Entities.Pocos.StockSortie", b =>
                {
                    b.Property<int>("IdStockSortie")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdStockSortie"));

                    b.Property<DateTime>("DateMouvement")
                        .HasColumnType("datetime2");

                    b.Property<string>("Sens")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdStockSortie");

                    b.ToTable("StockSortie");
                });

            modelBuilder.Entity("Entities.Pocos.EnteteFacture", b =>
                {
                    b.HasOne("Entities.Pocos.Client", "Client")
                        .WithMany()
                        .HasForeignKey("IdClient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Pocos.Facture", "Facture")
                        .WithOne("EnteteFacture")
                        .HasForeignKey("Entities.Pocos.EnteteFacture", "IdFacture")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Facture");
                });

            modelBuilder.Entity("Entities.Pocos.EnteteFactureFournisseur", b =>
                {
                    b.HasOne("Entities.Pocos.FactureFournisseur", "FactureFournisseur")
                        .WithOne("EnteteFactureFournisseur")
                        .HasForeignKey("Entities.Pocos.EnteteFactureFournisseur", "IdFactureFournisseur")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Pocos.Fournisseur", "Fournisseur")
                        .WithMany()
                        .HasForeignKey("IdFournisseur")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FactureFournisseur");

                    b.Navigation("Fournisseur");
                });

            modelBuilder.Entity("Entities.Pocos.LigneFacture", b =>
                {
                    b.HasOne("Entities.Pocos.Depot", "Depot")
                        .WithMany()
                        .HasForeignKey("IdDepot")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Pocos.Facture", "Facture")
                        .WithMany("LigneFacture")
                        .HasForeignKey("IdFacture")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Pocos.Produit", "Produit")
                        .WithMany()
                        .HasForeignKey("IdProduit")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Pocos.StockSortie", "StockSortie")
                        .WithOne("LigneFacture")
                        .HasForeignKey("Entities.Pocos.LigneFacture", "IdStockSortie");

                    b.Navigation("Depot");

                    b.Navigation("Facture");

                    b.Navigation("Produit");

                    b.Navigation("StockSortie");
                });

            modelBuilder.Entity("Entities.Pocos.LigneFactureFournisseur", b =>
                {
                    b.HasOne("Entities.Pocos.FactureFournisseur", "FactureFournisseur")
                        .WithMany("LigneFactureFournisseur")
                        .HasForeignKey("IdLigneFactureFournisseur")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Pocos.ProduitFournisseur", "ProduitFournisseur")
                        .WithMany()
                        .HasForeignKey("IdProduit")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FactureFournisseur");

                    b.Navigation("ProduitFournisseur");
                });

            modelBuilder.Entity("Entities.Pocos.Production", b =>
                {
                    b.HasOne("Entities.Pocos.FactureFournisseur", "FactureFournisseur")
                        .WithMany()
                        .HasForeignKey("IdFactureFournisseur")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Pocos.Produit", "Produit")
                        .WithMany()
                        .HasForeignKey("IdProduit")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Pocos.StockEntree", "StockEntree")
                        .WithMany()
                        .HasForeignKey("IdStockEntree")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FactureFournisseur");

                    b.Navigation("Produit");

                    b.Navigation("StockEntree");
                });

            modelBuilder.Entity("Entities.Pocos.ProduitDepot", b =>
                {
                    b.HasOne("Entities.Pocos.Depot", "Depot")
                        .WithMany()
                        .HasForeignKey("IdDepot")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Pocos.Produit", "Produit")
                        .WithMany()
                        .HasForeignKey("IdProduit")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Depot");

                    b.Navigation("Produit");
                });

            modelBuilder.Entity("Entities.Pocos.Facture", b =>
                {
                    b.Navigation("EnteteFacture")
                        .IsRequired();

                    b.Navigation("LigneFacture");
                });

            modelBuilder.Entity("Entities.Pocos.FactureFournisseur", b =>
                {
                    b.Navigation("EnteteFactureFournisseur")
                        .IsRequired();

                    b.Navigation("LigneFactureFournisseur");
                });

            modelBuilder.Entity("Entities.Pocos.StockSortie", b =>
                {
                    b.Navigation("LigneFacture")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
